{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setCarbs, setFats, setProts } from '../redux/foods';\nimport appleIcon from '../imgs/carbs/apple.svg';\nimport bananaIcon from '../imgs/carbs/banana.svg';\nimport breadIcon from '../imgs/carbs/bread.svg';\nimport cornIcon from '../imgs/carbs/corn.svg';\nimport potatoIcon from '../imgs/carbs/potato.svg';\nimport riceIcon from '../imgs/carbs/rice.svg';\nimport cheeseIcon from '../imgs/fats/cheese.svg';\nimport meatIcon from '../imgs/prots/meat.svg';\nimport milkIcon from '../imgs/prots/milk.svg';\nimport peanutIcon from '../imgs/prots/peanut.svg';\nimport peasIcon from '../imgs/prots/peas.svg';\nimport avocadoIcon from '../imgs/fats/avocado.svg';\nimport chocolateIcon from '../imgs/fats/chocolate.svg';\nimport eggIcon from '../imgs/fats/egg.svg';\nconst carbs = [appleIcon, bananaIcon, breadIcon, cornIcon, potatoIcon, riceIcon];\nconst prots = [];\nconst fats = [avocadoIcon, cheeseIcon, chocolateIcon, eggIcon];\n\nfunction popRandomElement(arr) {\n  arr.splice(Math.floor(Math.random() * arr.length), 1);\n}\n\nfunction useConfigureFoods() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    while (carbs.length !== 6) popRandomElement(carbs);\n\n    dispatch(setCarbs(carbs));\n\n    while (prots.length !== 6) popRandomElement(prots);\n\n    dispatch(setProts(prots));\n\n    while (fats.length !== 4) popRandomElement(fats);\n\n    dispatch(setFats(fats));\n  }, []);\n}\n\n_s(useConfigureFoods, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\nexport default useConfigureFoods;","map":{"version":3,"names":["React","useEffect","useDispatch","setCarbs","setFats","setProts","appleIcon","bananaIcon","breadIcon","cornIcon","potatoIcon","riceIcon","cheeseIcon","meatIcon","milkIcon","peanutIcon","peasIcon","avocadoIcon","chocolateIcon","eggIcon","carbs","prots","fats","popRandomElement","arr","splice","Math","floor","random","length","useConfigureFoods","dispatch"],"sources":["/home/dwight/workspaces/javascript/projects/alimentacao-balanceada/src/hooks/useConfigureFoods.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setCarbs, setFats, setProts } from '../redux/foods'\nimport appleIcon from '../imgs/carbs/apple.svg'\nimport bananaIcon from '../imgs/carbs/banana.svg'\nimport breadIcon from '../imgs/carbs/bread.svg'\nimport cornIcon from '../imgs/carbs/corn.svg'\nimport potatoIcon from '../imgs/carbs/potato.svg'\nimport riceIcon from '../imgs/carbs/rice.svg'\nimport cheeseIcon from '../imgs/fats/cheese.svg'\nimport meatIcon from '../imgs/prots/meat.svg'\nimport milkIcon from '../imgs/prots/milk.svg'\nimport peanutIcon from '../imgs/prots/peanut.svg'\nimport peasIcon from '../imgs/prots/peas.svg'\nimport avocadoIcon from '../imgs/fats/avocado.svg'\nimport chocolateIcon from '../imgs/fats/chocolate.svg'\nimport eggIcon from '../imgs/fats/egg.svg'\n\nconst carbs = [\n    appleIcon, bananaIcon, breadIcon,\n    cornIcon, potatoIcon, riceIcon\n]\n\nconst prots = [\n    \n]\n\nconst fats = [\n    avocadoIcon, cheeseIcon, chocolateIcon,\n    eggIcon\n]\n\nfunction popRandomElement(arr) {\n    arr.splice(Math.floor(Math.random() * arr.length), 1);\n}\n\nfunction useConfigureFoods() {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        while (carbs.length !== 6)\n            popRandomElement(carbs)\n\n        dispatch(setCarbs(carbs))\n\n        while (prots.length !== 6)\n            popRandomElement(prots)\n\n        dispatch(setProts(prots))\n\n        while (fats.length !== 4)\n            popRandomElement(fats)\n\n        dispatch(setFats(fats))\n    }, [])\n\n}\n\nexport default useConfigureFoods"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,QAA5B,QAA4C,gBAA5C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,KAAK,GAAG,CACVd,SADU,EACCC,UADD,EACaC,SADb,EAEVC,QAFU,EAEAC,UAFA,EAEYC,QAFZ,CAAd;AAKA,MAAMU,KAAK,GAAG,EAAd;AAIA,MAAMC,IAAI,GAAG,CACTL,WADS,EACIL,UADJ,EACgBM,aADhB,EAETC,OAFS,CAAb;;AAKA,SAASI,gBAAT,CAA0BC,GAA1B,EAA+B;EAC3BA,GAAG,CAACC,MAAJ,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,GAAG,CAACK,MAA/B,CAAX,EAAmD,CAAnD;AACH;;AAED,SAASC,iBAAT,GAA6B;EAAA;;EAEzB,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACZ,OAAOmB,KAAK,CAACS,MAAN,KAAiB,CAAxB,EACIN,gBAAgB,CAACH,KAAD,CAAhB;;IAEJW,QAAQ,CAAC5B,QAAQ,CAACiB,KAAD,CAAT,CAAR;;IAEA,OAAOC,KAAK,CAACQ,MAAN,KAAiB,CAAxB,EACIN,gBAAgB,CAACF,KAAD,CAAhB;;IAEJU,QAAQ,CAAC1B,QAAQ,CAACgB,KAAD,CAAT,CAAR;;IAEA,OAAOC,IAAI,CAACO,MAAL,KAAgB,CAAvB,EACIN,gBAAgB,CAACD,IAAD,CAAhB;;IAEJS,QAAQ,CAAC3B,OAAO,CAACkB,IAAD,CAAR,CAAR;EACH,CAfQ,EAeN,EAfM,CAAT;AAiBH;;GArBQQ,iB;UAEY5B,W;;;AAqBrB,eAAe4B,iBAAf"},"metadata":{},"sourceType":"module"}