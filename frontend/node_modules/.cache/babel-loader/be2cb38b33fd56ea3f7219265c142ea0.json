{"ast":null,"code":"var _jsxFileName = \"/home/dwight/workspaces/javascript/projects/alimentacao-balanceada/frontend/src/components/Quiz/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Feedback from '../Feedback';\nimport { useNavigate } from 'react-router-dom';\nimport proteinsAudio from './../../audios/quiz-proteinas.wav';\nimport carbsAudio from './../../audios/quiz-carboidratos.wav';\nimport fatsAudio from './../../audios/quiz-gorduras.wav';\nimport usePlayAudio from '../../hooks/usePlayAudio';\nimport './styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const [round, setRound] = useState(0);\n  const [quizOptions, setQuizOptions] = useState([]);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [answeredCorrectly, setAnsweredCorrectly] = useState();\n  const [curAudioBeingPlayed, setCurAudioBeingPlayed] = useState(proteinsAudio);\n  const carbs = useSelector(state => state.foods.carbs);\n  const prots = useSelector(state => state.foods.prots);\n  const fats = useSelector(state => state.foods.fats);\n  const navigate = useNavigate();\n  useEffect(() => {\n    function includeRandomFoodInQuizOptions(foodArray) {\n      const randomFood = foodArray[Math.floor(Math.random() * foodArray.length)];\n      setQuizOptions(state => [...state, randomFood]);\n    }\n\n    const areFoodArraysNotDefined = carbs.length === 0;\n    if (areFoodArraysNotDefined) return;\n    setQuizOptions([]);\n    includeRandomFoodInQuizOptions(carbs);\n    includeRandomFoodInQuizOptions(prots);\n    includeRandomFoodInQuizOptions(fats);\n  }, [round, carbs, prots, fats]);\n  useEffect(() => {\n    if (isQuizOver()) setShowFeedback(true);\n  }, [round]);\n  useEffect(() => {}, [round]);\n  usePlayAudio(curAudioBeingPlayed);\n\n  const isItProteinRound = () => round === 0 || round === 1;\n\n  const isItCarbRound = () => round === 2 || round === 3;\n\n  const isItFatRound = () => round === 4;\n\n  const isQuizOver = () => round === 5;\n\n  function handleOptionClick(option) {\n    if (isItCarbRound()) setAnsweredCorrectly(carbs.includes(option));\n    if (isItProteinRound()) setAnsweredCorrectly(prots.includes(option));\n    if (isItFatRound()) setAnsweredCorrectly(fats.includes(option));\n    setShowFeedback(true);\n  }\n\n  function handleFeedbackBtnClick() {\n    if (isQuizOver()) navigate('/menu');else if (answeredCorrectly) setRound(state => state + 1);\n    setShowFeedback(false);\n  }\n\n  function getFeedbackVariant() {\n    if (isQuizOver()) return 'end';else if (answeredCorrectly) return 'positive';else return 'negative';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showFeedback ? /*#__PURE__*/_jsxDEV(Feedback, {\n      variant: getFeedbackVariant(),\n      callback: handleFeedbackBtnClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Quais desses alimentos cont\\xE9m\", isItCarbRound() && ' muitos carboidratos', isItProteinRound() && ' muitas proteínas', isItFatRound() && ' muitas gorduras', \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quiz-options\",\n        children: quizOptions.map((option, idx) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: option,\n          alt: `Opção ${idx + 1}`,\n          className: \"icon\",\n          onClick: () => handleOptionClick(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this)\n  }, void 0, false);\n}\n\n_s(Quiz, \"ZiymIzkEF2z6165GfQ13hztMk0g=\", false, function () {\n  return [useSelector, useSelector, useSelector, useNavigate, usePlayAudio];\n});\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Feedback","useNavigate","proteinsAudio","carbsAudio","fatsAudio","usePlayAudio","Quiz","round","setRound","quizOptions","setQuizOptions","showFeedback","setShowFeedback","answeredCorrectly","setAnsweredCorrectly","curAudioBeingPlayed","setCurAudioBeingPlayed","carbs","state","foods","prots","fats","navigate","includeRandomFoodInQuizOptions","foodArray","randomFood","Math","floor","random","length","areFoodArraysNotDefined","isQuizOver","isItProteinRound","isItCarbRound","isItFatRound","handleOptionClick","option","includes","handleFeedbackBtnClick","getFeedbackVariant","map","idx"],"sources":["/home/dwight/workspaces/javascript/projects/alimentacao-balanceada/frontend/src/components/Quiz/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport Feedback from '../Feedback'\nimport { useNavigate } from 'react-router-dom'\nimport proteinsAudio from './../../audios/quiz-proteinas.wav'\nimport carbsAudio from './../../audios/quiz-carboidratos.wav'\nimport fatsAudio from './../../audios/quiz-gorduras.wav'\nimport usePlayAudio from '../../hooks/usePlayAudio'\nimport './styles.scss'\n\nfunction Quiz() {\n\n    const [round, setRound] = useState(0)\n    const [quizOptions, setQuizOptions] = useState([])\n    const [showFeedback, setShowFeedback] = useState(false)\n    const [answeredCorrectly, setAnsweredCorrectly] = useState()\n    const [curAudioBeingPlayed, setCurAudioBeingPlayed] = useState(proteinsAudio)\n    const carbs = useSelector((state) => state.foods.carbs)\n    const prots = useSelector((state) => state.foods.prots)\n    const fats = useSelector((state) => state.foods.fats)\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        function includeRandomFoodInQuizOptions(foodArray) {\n            const randomFood = foodArray[Math.floor(Math.random() * foodArray.length)]\n            setQuizOptions((state) => [...state, randomFood])\n        }\n\n        const areFoodArraysNotDefined = carbs.length === 0\n        if (areFoodArraysNotDefined)\n            return\n\n        setQuizOptions([])\n\n        includeRandomFoodInQuizOptions(carbs)\n        includeRandomFoodInQuizOptions(prots)\n        includeRandomFoodInQuizOptions(fats)\n\n    }, [round, carbs, prots, fats])\n\n    useEffect(() => {\n        if (isQuizOver())\n            setShowFeedback(true)\n    }, [round])\n\n    useEffect(() => {\n        \n    }, [round])\n\n    usePlayAudio(curAudioBeingPlayed)\n\n    const isItProteinRound = () => (round === 0 || round === 1)\n    const isItCarbRound = () => (round === 2 || round === 3)\n    const isItFatRound = () => (round === 4)\n    const isQuizOver = () => (round === 5)\n\n    function handleOptionClick(option) {\n        if (isItCarbRound())\n            setAnsweredCorrectly(carbs.includes(option))\n        if (isItProteinRound())\n            setAnsweredCorrectly(prots.includes(option))\n        if (isItFatRound())\n            setAnsweredCorrectly(fats.includes(option))\n\n        setShowFeedback(true)\n    }\n\n    function handleFeedbackBtnClick() {\n        if (isQuizOver())\n            navigate('/menu')\n        else if (answeredCorrectly)\n            setRound((state) => state + 1)\n\n        setShowFeedback(false)\n    }\n\n    function getFeedbackVariant() {\n        if (isQuizOver())\n            return 'end'\n        else if (answeredCorrectly)\n            return 'positive'\n        else\n            return 'negative'\n    }\n\n    return (\n\n        <>\n            {\n                showFeedback ?\n                    <Feedback\n                        variant={getFeedbackVariant()}\n                        callback={handleFeedbackBtnClick}\n                    /> :\n\n                    <article id=\"quiz\">\n                        <h1>\n                            Quais desses alimentos contém\n                            {isItCarbRound() && ' muitos carboidratos'}\n                            {isItProteinRound() && ' muitas proteínas'}\n                            {isItFatRound() && ' muitas gorduras'}\n                            ?\n                        </h1>\n\n                        <div id='quiz-options'>\n                            {\n                                quizOptions.map((option, idx) => (\n                                    <img src={option}\n                                        alt={`Opção ${idx + 1}`}\n                                        className='icon'\n                                        onClick={() => handleOptionClick(option)} />\n                                ))\n                            }\n                        </div>\n\n                    </article>\n            }\n        </>\n    )\n}\n\nexport default Quiz"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAO,eAAP;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAEZ,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,EAA1D;EACA,MAAM,CAACiB,mBAAD,EAAsBC,sBAAtB,IAAgDlB,QAAQ,CAACI,aAAD,CAA9D;EACA,MAAMe,KAAK,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,KAAxB,CAAzB;EACA,MAAMG,KAAK,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,KAAxB,CAAzB;EACA,MAAMC,IAAI,GAAGtB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,IAAxB,CAAxB;EAEA,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;EAEAJ,SAAS,CAAC,MAAM;IACZ,SAAS0B,8BAAT,CAAwCC,SAAxC,EAAmD;MAC/C,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAArC,CAAD,CAA5B;MACAnB,cAAc,CAAEQ,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAWO,UAAX,CAAZ,CAAd;IACH;;IAED,MAAMK,uBAAuB,GAAGb,KAAK,CAACY,MAAN,KAAiB,CAAjD;IACA,IAAIC,uBAAJ,EACI;IAEJpB,cAAc,CAAC,EAAD,CAAd;IAEAa,8BAA8B,CAACN,KAAD,CAA9B;IACAM,8BAA8B,CAACH,KAAD,CAA9B;IACAG,8BAA8B,CAACF,IAAD,CAA9B;EAEH,CAhBQ,EAgBN,CAACd,KAAD,EAAQU,KAAR,EAAeG,KAAf,EAAsBC,IAAtB,CAhBM,CAAT;EAkBAxB,SAAS,CAAC,MAAM;IACZ,IAAIkC,UAAU,EAAd,EACInB,eAAe,CAAC,IAAD,CAAf;EACP,CAHQ,EAGN,CAACL,KAAD,CAHM,CAAT;EAKAV,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACU,KAAD,CAFM,CAAT;EAIAF,YAAY,CAACU,mBAAD,CAAZ;;EAEA,MAAMiB,gBAAgB,GAAG,MAAOzB,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAAzD;;EACA,MAAM0B,aAAa,GAAG,MAAO1B,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAAtD;;EACA,MAAM2B,YAAY,GAAG,MAAO3B,KAAK,KAAK,CAAtC;;EACA,MAAMwB,UAAU,GAAG,MAAOxB,KAAK,KAAK,CAApC;;EAEA,SAAS4B,iBAAT,CAA2BC,MAA3B,EAAmC;IAC/B,IAAIH,aAAa,EAAjB,EACInB,oBAAoB,CAACG,KAAK,CAACoB,QAAN,CAAeD,MAAf,CAAD,CAApB;IACJ,IAAIJ,gBAAgB,EAApB,EACIlB,oBAAoB,CAACM,KAAK,CAACiB,QAAN,CAAeD,MAAf,CAAD,CAApB;IACJ,IAAIF,YAAY,EAAhB,EACIpB,oBAAoB,CAACO,IAAI,CAACgB,QAAL,CAAcD,MAAd,CAAD,CAApB;IAEJxB,eAAe,CAAC,IAAD,CAAf;EACH;;EAED,SAAS0B,sBAAT,GAAkC;IAC9B,IAAIP,UAAU,EAAd,EACIT,QAAQ,CAAC,OAAD,CAAR,CADJ,KAEK,IAAIT,iBAAJ,EACDL,QAAQ,CAAEU,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;IAEJN,eAAe,CAAC,KAAD,CAAf;EACH;;EAED,SAAS2B,kBAAT,GAA8B;IAC1B,IAAIR,UAAU,EAAd,EACI,OAAO,KAAP,CADJ,KAEK,IAAIlB,iBAAJ,EACD,OAAO,UAAP,CADC,KAGD,OAAO,UAAP;EACP;;EAED,oBAEI;IAAA,UAEQF,YAAY,gBACR,QAAC,QAAD;MACI,OAAO,EAAE4B,kBAAkB,EAD/B;MAEI,QAAQ,EAAED;IAFd;MAAA;MAAA;MAAA;IAAA,QADQ,gBAMR;MAAS,EAAE,EAAC,MAAZ;MAAA,wBACI;QAAA,+CAEKL,aAAa,MAAM,sBAFxB,EAGKD,gBAAgB,MAAM,mBAH3B,EAIKE,YAAY,MAAM,kBAJvB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAK,EAAE,EAAC,cAAR;QAAA,UAEQzB,WAAW,CAAC+B,GAAZ,CAAgB,CAACJ,MAAD,EAASK,GAAT,kBACZ;UAAK,GAAG,EAAEL,MAAV;UACI,GAAG,EAAG,SAAQK,GAAG,GAAG,CAAE,EAD1B;UAEI,SAAS,EAAC,MAFd;UAGI,OAAO,EAAE,MAAMN,iBAAiB,CAACC,MAAD;QAHpC;UAAA;UAAA;UAAA;QAAA,QADJ;MAFR;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EARZ,iBAFJ;AAkCH;;GA9GQ9B,I;UAOSP,W,EACAA,W,EACDA,W,EAEIE,W,EA6BjBI,Y;;;KAxCKC,I;AAgHT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}